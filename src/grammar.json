{
  "name": "GAPtst",
  "rules": {
    "test_file": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "comment"
          },
          {
            "type": "SYMBOL",
            "name": "test_case"
          },
          {
            "type": "SYMBOL",
            "name": "_statement"
          }
        ]
      }
    },
    "_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "local_statement"
        },
        {
          "type": "SYMBOL",
          "name": "exec_statement"
        },
        {
          "type": "SYMBOL",
          "name": "if_statement"
        }
      ]
    },
    "if_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#@if"
        },
        {
          "type": "FIELD",
          "name": "condition",
          "content": {
            "type": "SYMBOL",
            "name": "gap_expression"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "comment"
              },
              {
                "type": "SYMBOL",
                "name": "test_case"
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "else_clause"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "#@fi"
        },
        {
          "type": "STRING",
          "value": "\n"
        }
      ]
    },
    "else_clause": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#@else"
        },
        {
          "type": "STRING",
          "value": "\n"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "comment"
              },
              {
                "type": "SYMBOL",
                "name": "test_case"
              }
            ]
          }
        }
      ]
    },
    "local_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#@local"
        },
        {
          "type": "SYMBOL",
          "name": "gap_expression"
        }
      ]
    },
    "exec_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#@exec"
        },
        {
          "type": "SYMBOL",
          "name": "gap_expression"
        }
      ]
    },
    "test_case": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "gap> "
        },
        {
          "type": "ALIAS",
          "content": {
            "type": "SYMBOL",
            "name": "gap_expression"
          },
          "named": true,
          "value": "input_line"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": "> "
                  },
                  {
                    "type": "ALIAS",
                    "content": {
                      "type": "SYMBOL",
                      "name": "gap_expression"
                    },
                    "named": true,
                    "value": "input_line"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "output_line"
              }
            ]
          }
        }
      ]
    },
    "comment": {
      "type": "PATTERN",
      "value": "\\n?#([^@\\n].*)?\\n*"
    },
    "gap_expression": {
      "type": "PATTERN",
      "value": "[^\\n]*?\\n?"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [
    {
      "type": "SYMBOL",
      "name": "output_line"
    }
  ],
  "inline": [
    "_statement"
  ],
  "supertypes": []
}

